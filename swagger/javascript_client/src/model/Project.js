/*
 * ToDo and Tracker
 * For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.33
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Tag} from './Tag';
import {Task} from './Task';

/**
 * The Project model module.
 * @module model/Project
 * @version 0.0.1
 */
export class Project {
  /**
   * Constructs a new <code>Project</code>.
   * @alias module:model/Project
   * @class
   * @param name {String} 
   */
  constructor(name) {
    this.name = name;
  }

  /**
   * Constructs a <code>Project</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Project} obj Optional instance to populate.
   * @return {module:model/Project} The populated <code>Project</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Project();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('createDate'))
        obj.createDate = ApiClient.convertToType(data['createDate'], 'Date');
      if (data.hasOwnProperty('deadlineDate'))
        obj.deadlineDate = ApiClient.convertToType(data['deadlineDate'], 'Date');
      if (data.hasOwnProperty('projectNote'))
        obj.projectNote = ApiClient.convertToType(data['projectNote'], 'String');
      if (data.hasOwnProperty('tasks'))
        obj.tasks = ApiClient.convertToType(data['tasks'], [Task]);
      if (data.hasOwnProperty('tags'))
        obj.tags = ApiClient.convertToType(data['tags'], [Tag]);
      if (data.hasOwnProperty('category'))
        obj.category = ApiClient.convertToType(data['category'], 'String');
      if (data.hasOwnProperty('involvedUsers'))
        obj.involvedUsers = ApiClient.convertToType(data['involvedUsers'], ['Number']);
      if (data.hasOwnProperty('isArchieved'))
        obj.isArchieved = ApiClient.convertToType(data['isArchieved'], 'Boolean');
    }
    return obj;
  }
}

/**
 * @member {Number} id
 */
Project.prototype.id = undefined;

/**
 * @member {String} name
 */
Project.prototype.name = undefined;

/**
 * @member {Date} createDate
 */
Project.prototype.createDate = undefined;

/**
 * @member {Date} deadlineDate
 */
Project.prototype.deadlineDate = undefined;

/**
 * @member {String} projectNote
 */
Project.prototype.projectNote = undefined;

/**
 * @member {Array.<module:model/Task>} tasks
 */
Project.prototype.tasks = undefined;

/**
 * @member {Array.<module:model/Tag>} tags
 */
Project.prototype.tags = undefined;

/**
 * Allowed values for the <code>category</code> property.
 * @enum {String}
 * @readonly
 */
Project.CategoryEnum = {
  /**
   * value: "work"
   * @const
   */
  work: "work",

  /**
   * value: "household"
   * @const
   */
  household: "household",

  /**
   * value: "selfImprove"
   * @const
   */
  selfImprove: "selfImprove",

  /**
   * value: "health"
   * @const
   */
  health: "health",

  /**
   * value: "leisure"
   * @const
   */
  leisure: "leisure"
};
/**
 * @member {module:model/Project.CategoryEnum} category
 */
Project.prototype.category = undefined;

/**
 * @member {Array.<Number>} involvedUsers
 */
Project.prototype.involvedUsers = undefined;

/**
 * @member {Boolean} isArchieved
 */
Project.prototype.isArchieved = undefined;

