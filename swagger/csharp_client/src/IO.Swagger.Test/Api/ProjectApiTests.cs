/* 
 * ToDo and Tracker
 *
 * For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ProjectApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ProjectApiTests
    {
        private ProjectApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ProjectApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ProjectApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ProjectApi
            //Assert.IsInstanceOfType(typeof(ProjectApi), instance, "instance is a ProjectApi");
        }

        /// <summary>
        /// Test AddProject
        /// </summary>
        [Test]
        public void AddProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Project body = null;
            //string apiKey = null;
            //var response = instance.AddProject(body, apiKey);
            //Assert.IsInstanceOf<Project> (response, "response is Project");
        }
        /// <summary>
        /// Test DeleteProject
        /// </summary>
        [Test]
        public void DeleteProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? pid = null;
            //string apiKey = null;
            //instance.DeleteProject(pid, apiKey);
            
        }
        /// <summary>
        /// Test GetProjectById
        /// </summary>
        [Test]
        public void GetProjectByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? pid = null;
            //string apiKey = null;
            //var response = instance.GetProjectById(pid, apiKey);
            //Assert.IsInstanceOf<Project> (response, "response is Project");
        }
        /// <summary>
        /// Test GetProjects
        /// </summary>
        [Test]
        public void GetProjectsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //var response = instance.GetProjects(apiKey);
            //Assert.IsInstanceOf<List<Project>> (response, "response is List<Project>");
        }
        /// <summary>
        /// Test UpdateProject
        /// </summary>
        [Test]
        public void UpdateProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Project body = null;
            //long? pid = null;
            //string apiKey = null;
            //instance.UpdateProject(body, pid, apiKey);
            
        }
    }

}
